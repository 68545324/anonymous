import numpy as np
import matplotlib.pyplot as plt

if __name__ == "__main__":
    labels = [
        "minimum",
        "uniform",
        "replicator",
        r"$\alpha$-rank-mix",
        r"$\alpha$-rank-max",
        "random",
    ]
    cp1 = np.array([2.75, 2.58, 2.05, 1.91, 0.67, 2.16])
    cp2 = np.array([1.37, 1.37, 1.18, 1.01, 0.34, 1.09])
    ex1 = np.array([1.9, 2.63, 2.13, 3.06, 3.65, 2.07])
    ex2 = np.array([0.92, 1.35, 1.17, 1.56, 1.88, 1.03])
    cp1 = (cp1 - np.max(cp1)) / (np.max(cp1) - 0.0) + 1.0
    ex1 = (ex1 - np.max(ex1)) / (np.max(ex1) - 0.0) + 1.0
    cp2 = (cp2 - np.max(cp2)) / (np.max(cp2) - 0.0) + 1.0
    ex2 = (ex2 - np.max(ex2)) / (np.max(ex2) - 0.0) + 1.0
    player_1_pos = [
        (cp1[0], ex1[0]),
        (cp1[1], ex1[1]),
        (cp1[2], ex1[2]),
        (cp1[3], ex1[3]),
        (cp1[4], ex1[4]),
        (cp1[5], ex1[5]),
    ]
    player_2_pos = [
        (cp2[0], ex2[0]),
        (cp2[1], ex2[1]),
        (cp2[2], ex2[2]),
        (cp2[3], ex2[3]),
        (cp2[4], ex2[4]),
        (cp2[5], ex2[5]),
    ]
    #   plt.scatter(cp1, ex1, label='player 1')
    #   plt.scatter(cp2, ex2, label='player 2')
    fs = 15
    for i, label in enumerate(labels):
        if i == 0:
            plt.scatter(
                [player_1_pos[i][0]],
                [player_1_pos[i][1]],
                c="#1f77b4",
                label="player 1",
            )
            plt.scatter(
                [player_2_pos[i][0]],
                [player_2_pos[i][1]],
                c="#ff7f0e",
                label="player 2",
            )
        else:
            plt.scatter(
                [player_1_pos[i][0]], [player_1_pos[i][1]], c="#1f77b4"
            )
            plt.scatter(
                [player_2_pos[i][0]], [player_2_pos[i][1]], c="#ff7f0e"
            )
        plt.plot(
            [player_1_pos[i][0], player_2_pos[i][0]],
            [player_1_pos[i][1], player_2_pos[i][1]],
            "k--",
        )
        if label == "random":
            pos = list(player_1_pos[i])
            pos[0] -= 0.05
            pos[1] -= 0.06
            plt.annotate(label, pos, fontsize=fs)
        elif np.linalg.norm(player_1_pos[i]) > np.linalg.norm(player_2_pos[i]):
            plt.annotate(label, player_1_pos[i], fontsize=fs)
        else:
            plt.annotate(label, player_2_pos[i], fontsize=fs)
    plt.legend(fontsize=fs)
    #   plt.legend([(p1,p2)],['points'],scatterpoints=2)
    plt.xlim(0.0, np.max(ex1) + 0.3)
    plt.ylim(0.0, np.max(cp1) + 0.3)
    plt.xticks(ticks=[0.0, 0.2, 0.4, 0.6, 0.8, 1.0])
    plt.yticks(ticks=[0.0, 0.2, 0.4, 0.6, 0.8, 1.0])
    plt.xlabel("cross-play", fontsize=fs)
    plt.ylabel("exploitation", fontsize=fs)
    plt.show()
